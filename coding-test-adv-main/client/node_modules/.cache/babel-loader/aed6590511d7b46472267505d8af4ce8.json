{"ast":null,"code":"var _jsxFileName = \"/Users/jhalak.mehta/dev-git/TEST_INT/coding-test-adv-main/client/src/components/admin.js\",\n    _s = $RefreshSig$();\n\nimport Login from './login';\nimport useToken from '../useToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst React = require('react');\n\nconst Admin = () => {\n  _s();\n\n  const {\n    token,\n    setToken\n  } = useToken();\n  const [showPhotos, setPhotoDetails] = React.useState([]);\n  const [message, setMessage] = React.useState(null);\n\n  const showAllRecords = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/show-details', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(response => {\n        setPhotoDetails(response);\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const deleteRecord = async catID => {\n    try {\n      const response = await fetch(`http://localhost:9000/categories/delete/${catID}`);\n      const jsonData = await response.json();\n      setMessage(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const addNewRecord = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/categories/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(response => {\n        setMessage(response);\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  React.useEffect(() => {\n    showAllRecords().then(r => null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !token ? /*#__PURE__*/_jsxDEV(Login, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-title\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-8\",\n                  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: [\"Category \", /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 76\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 63\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-info add-new\",\n                    onClick: () => addNewRecord(),\n                    children: \"Add New\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Photo URL\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: showPhotos.map(photos => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: photos.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: photos.photo_url,\n                      className: \"table-images\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"edit\",\n                      title: \"Edit\",\n                      \"data-toggle\": \"tooltip\",\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"delete\",\n                      title: \"Delete\",\n                      \"data-toggle\": \"tooltip\",\n                      onClick: () => deleteRecord(photos.category_id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(Admin, \"Da5jIEvI8n9M5LWmIcpMG1XGOkg=\", false, function () {\n  return [useToken];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/jhalak.mehta/dev-git/TEST_INT/coding-test-adv-main/client/src/components/admin.js"],"names":["Login","useToken","React","require","Admin","token","setToken","showPhotos","setPhotoDetails","useState","message","setMessage","showAllRecords","response","fetch","method","headers","then","json","err","console","error","deleteRecord","catID","jsonData","addNewRecord","useEffect","r","map","photos","category","photo_url","category_id"],"mappings":"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","sourcesContent":["import Login from './login';\nimport useToken from '../useToken';\nconst React = require('react');\n\nconst Admin = () => {\n    const { token, setToken } = useToken();\n    const [showPhotos, setPhotoDetails] = React.useState([]);\n    const [message, setMessage] = React.useState(null);\n    const showAllRecords = async () => {\n        try {\n            const response = await fetch('http://localhost:9000/show-details', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }}).then(response => response.json())\n                .then((response) => { setPhotoDetails(response)}\n        );\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const deleteRecord = async (catID) => {\n        try {\n            const response = await fetch(`http://localhost:9000/categories/delete/${catID}`);\n            const jsonData = await response.json();\n\n            setMessage(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const addNewRecord = async () => {\n        try {\n            const response = await fetch('http://localhost:9000/categories/create', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }}).then(response => response.json())\n                .then((response) => { setMessage(response)});\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    React.useEffect(() => {\n        showAllRecords().then(r => null);\n    }, []);\n    return (\n        <>\n            {!token ? (\n                <Login setToken={setToken} />\n            ) : <>\n                <div className=\"container-lg\">\n                    <div className=\"message\">{message}</div>\n                    <div className=\"table-responsive\">\n                        <div className=\"table-wrapper\">\n                            <div className=\"table-title\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-8\"><h2>Category <b>Details</b></h2></div>\n                                    <div className=\"col-sm-4\">\n                                        <button type=\"button\" className=\"btn btn-info add-new\" onClick={() => addNewRecord()}>Add New\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            <table className=\"table table-bordered\">\n                                <thead>\n                                <tr>\n                                    <th>Category</th>\n                                    <th>Photo URL</th>\n                                    <th>Actions</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {showPhotos.map(photos => (\n                                    <tr>\n                                        <td>{photos.category}</td>\n                                        <td><img src={photos.photo_url} className=\"table-images\" /></td>\n                                        <td>\n                                            <a className=\"edit\" title=\"Edit\" data-toggle=\"tooltip\">Edit</a>\n                                            <a className=\"delete\" title=\"Delete\" data-toggle=\"tooltip\" onClick={() => deleteRecord(photos.category_id)}>Delete</a>\n                                        </td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </> }\n        </>\n    );\n};\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}