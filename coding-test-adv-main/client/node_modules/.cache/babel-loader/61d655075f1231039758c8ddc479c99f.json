{"ast":null,"code":"var _jsxFileName = \"/Users/jhalak.mehta/dev-git/TEST_INT/coding-test-adv-main/client/src/components/admin.js\",\n    _s = $RefreshSig$();\n\nimport useToken from '../useToken';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst React = require('react');\n\nconst Admin = () => {\n  _s();\n\n  const {\n    token,\n    setToken\n  } = useToken();\n  const [categories, setCategories] = React.useState([]);\n  const [showPhotos, setPhotoDetails] = React.useState([]);\n  const [message, setMessage] = React.useState(null);\n  const [formValues, setFormValues] = React.useState({});\n  const navigate = useNavigate(); // fetch and show all photos on admin page\n\n  const showAllRecords = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/show-details', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(response => {\n        setPhotoDetails(response);\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; // get categories ( We can add this function in util and make it reusabled as being used in carousel)\n\n\n  const getCategories = async () => {\n    try {\n      const response = await fetch(\"http://localhost:9000/categories\");\n      const jsonData = await response.json();\n      setCategories(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //delete selected photo records\n\n\n  const deleteRecord = async photID => {\n    try {\n      const response = await fetch(`http://localhost:9000/categories/delete/${photID}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(response => updateTable(response, photID));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; // update table row once record is deleted\n\n\n  const updateTable = (response, photID) => {\n    setMessage(response);\n    const newPhotos = showPhotos.filter(item => item.id !== photID);\n    setPhotoDetails(newPhotos);\n  }; //set form data in react state\n\n\n  const handleChange = e => {\n    setFormValues({ ...formValues,\n      [e.target.name]: e.target.value\n    });\n  }; // add new record for selected category\n\n\n  const addNewRecord = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:9000/categories/create-photos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(formValues)\n      }).then(response => response.json()).then(response => {\n        addTableRecord(response);\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; // show record instered msg and update table\n\n\n  const addTableRecord = response => {\n    setMessage('New Record Inserted, Please refresh page');\n    setPhotoDetails(showPhotos => [...showPhotos, response]); //console.log(showPhotos);\n  }; // logout from admin panel\n\n\n  const logout = () => {\n    localStorage.setItem('token', '');\n    navigate('/login');\n  };\n\n  React.useEffect(() => {\n    showAllRecords().then(r => null);\n    getCategories().then(r => null);\n    const removeMessage = setTimeout(() => {\n      // After 5 seconds set the show value to false\n      setMessage(false);\n    }, 10000);\n    return () => {\n      clearTimeout(removeMessage);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-lg\",\n      children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Category \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-8\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#\",\n                  onClick: () => logout(),\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-12\",\n                children: /*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"form-control\",\n                  onSubmit: addNewRecord,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      className: \"form-select\",\n                      name: \"category_id\",\n                      onChange: handleChange,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Select Category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 49\n                      }, this), categories && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: category.id,\n                        children: category.category\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 61\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      className: \"form-control\",\n                      name: \"photo_url\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"submit\",\n                      className: \"btn btn-info add-new\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Photo URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: token && showPhotos.map(photos => /*#__PURE__*/_jsxDEV(\"tr\", {\n                \"data-id\": photos.id,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: photos.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: photos.photo_url,\n                    className: \"table-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"delete\",\n                    title: \"Delete\",\n                    onClick: () => deleteRecord(photos.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Admin, \"W3rs8OS71ysL19u4l8KeNkKZy4o=\", false, function () {\n  return [useToken, useNavigate];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/jhalak.mehta/dev-git/TEST_INT/coding-test-adv-main/client/src/components/admin.js"],"names":["useToken","useNavigate","React","require","Admin","token","setToken","categories","setCategories","useState","showPhotos","setPhotoDetails","message","setMessage","formValues","setFormValues","navigate","showAllRecords","response","fetch","method","headers","then","json","err","console","error","getCategories","jsonData","deleteRecord","photID","updateTable","newPhotos","filter","item","id","handleChange","e","target","name","value","addNewRecord","preventDefault","body","JSON","stringify","addTableRecord","logout","localStorage","setItem","useEffect","r","removeMessage","setTimeout","clearTimeout","map","category","photos","photo_url"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBN,QAAQ,EAApC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BN,KAAK,CAACO,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACC,UAAD,EAAaC,eAAb,IAAgCT,KAAK,CAACO,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACO,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8Bb,KAAK,CAACO,QAAN,CAAe,EAAf,CAApC;AACA,QAAMO,QAAQ,GAAGf,WAAW,EAA5B,CANgB,CAOhB;;AACA,QAAMgB,cAAc,GAAG,YAAY;AAC/B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AAC/DC,QAAAA,MAAM,EAAE,KADuD;AAE/DC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAkB,UAAShB,KAAM;AAF5B;AAFsD,OAAvC,CAAL,CAKfiB,IALe,CAKVJ,QAAQ,IAAIA,QAAQ,CAACK,IAAT,EALF,EAMlBD,IANkB,CAMZJ,QAAD,IAAc;AAAEP,QAAAA,eAAe,CAACO,QAAD,CAAf;AAA0B,OAN7B,CAAvB;AAQH,KATD,CASE,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACZ,OAAlB;AACH;AACJ,GAbD,CARgB,CAuBhB;;;AACA,QAAMe,aAAa,GAAG,YAAY;AAC9B,QAAI;AACA,YAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA5B;AACA,YAAMS,QAAQ,GAAG,MAAMV,QAAQ,CAACK,IAAT,EAAvB;AACAf,MAAAA,aAAa,CAACoB,QAAD,CAAb;AACH,KAJD,CAIE,OAAOJ,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACZ,OAAlB;AACH;AACJ,GARD,CAxBgB,CAkChB;;;AACA,QAAMiB,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACnC,QAAI;AACA,YAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CW,MAAO,EAAnD,EAAsD;AAC9EV,QAAAA,MAAM,EAAE,QADsE;AAE9EC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAkB,UAAShB,KAAM;AAF5B;AAFqE,OAAtD,CAAL,CAKfiB,IALe,CAKVJ,QAAQ,IAAIA,QAAQ,CAACK,IAAT,EALF,EAMlBD,IANkB,CAMbJ,QAAQ,IAAIa,WAAW,CAACb,QAAD,EAAWY,MAAX,CANV,CAAvB;AAOH,KARD,CAQE,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACZ,OAAlB;AACH;AACJ,GAZD,CAnCgB,CAiDhB;;;AACA,QAAMmB,WAAW,GAAG,CAACb,QAAD,EAAWY,MAAX,KAAsB;AACtCjB,IAAAA,UAAU,CAACK,QAAD,CAAV;AACA,UAAMc,SAAS,GAAGtB,UAAU,CAACuB,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAxC,CAAlB;AACAnB,IAAAA,eAAe,CAACqB,SAAD,CAAf;AACH,GAJD,CAlDgB,CAwDhB;;;AACA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AACxBtB,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,OAACuB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA3C,KAAD,CAAb;AACH,GAFD,CAzDgB,CA6DhB;;;AACA,QAAMC,YAAY,GAAG,MAAMJ,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAI;AACA,YAAMxB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAD,EAAmD;AAC3EC,QAAAA,MAAM,EAAE,MADmE;AAE3EC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAkB,UAAShB,KAAM;AAF5B,SAFkE;AAM3EsC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe/B,UAAf;AANqE,OAAnD,CAAL,CAOpBQ,IAPoB,CAOfJ,QAAQ,IAAIA,QAAQ,CAACK,IAAT,EAPG,EAQlBD,IARkB,CAQZJ,QAAD,IAAc;AAAE4B,QAAAA,cAAc,CAAC5B,QAAD,CAAd;AAAyB,OAR5B,CAAvB;AASH,KAVD,CAUE,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACZ,OAAlB;AACH;AACJ,GAfD,CA9DgB,CA+EhB;;;AACA,QAAMkC,cAAc,GAAI5B,QAAD,IAAc;AACjCL,IAAAA,UAAU,CAAC,0CAAD,CAAV;AACAF,IAAAA,eAAe,CAACD,UAAU,IAAI,CAAC,GAAGA,UAAJ,EAAeQ,QAAf,CAAf,CAAf,CAFiC,CAGjC;AACH,GAJD,CAhFgB,CAsFhB;;;AACA,QAAM6B,MAAM,GAAG,MAAM;AACjBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6B,EAA7B;AACAjC,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACH,GAHD;;AAIAd,EAAAA,KAAK,CAACgD,SAAN,CAAgB,MAAM;AAClBjC,IAAAA,cAAc,GAAGK,IAAjB,CAAsB6B,CAAC,IAAI,IAA3B;AACAxB,IAAAA,aAAa,GAAGL,IAAhB,CAAqB6B,CAAC,IAAI,IAA1B;AACA,UAAMC,aAAa,GAAGC,UAAU,CAAC,MAAM;AACnC;AACAxC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAH+B,EAG7B,KAH6B,CAAhC;AAKA,WAAO,MAAM;AACTyC,MAAAA,YAAY,CAACF,aAAD,CAAZ;AACH,KAFD;AAGH,GAXD,EAWG,EAXH;AAYA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACKxC,OAAO,iBAAK;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,kBAA2CA;AAA3C;AAAA;AAAA;AAAA;AAAA,cADjB,eAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,uCAA0B;AAAA,uDAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,uCACI;AAAG,kBAAA,IAAI,EAAC,GAAR;AAAY,kBAAA,OAAO,EAAE,MAAMmC,MAAM,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,uCACI;AAAM,kBAAA,SAAS,EAAC,cAAhB;AAA+B,kBAAA,QAAQ,EAAEN,YAAzC;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,2CACI;AAAQ,sBAAA,SAAS,EAAC,aAAlB;AAAgC,sBAAA,IAAI,EAAC,aAArC;AAAmD,sBAAA,QAAQ,EAAEL,YAA7D;AAAA,8CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAES7B,UAAU,IAAIA,UAAU,CAACgD,GAAX,CAAeC,QAAQ,iBAC9B;AAAQ,wBAAA,KAAK,EAAEA,QAAQ,CAACrB,EAAxB;AAAA,kCAA6BqB,QAAQ,CAACA;AAAtC;AAAA;AAAA;AAAA;AAAA,8BADO,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAUI;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,2CACI;AAAO,sBAAA,IAAI,EAAC,MAAZ;AAAmB,sBAAA,SAAS,EAAC,cAA7B;AAA4C,sBAAA,IAAI,EAAC,WAAjD;AAA6D,sBAAA,QAAQ,EAAEpB;AAAvE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAVJ,eAaI;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,2CACI;AAAO,sBAAA,IAAI,EAAC,QAAZ;AAAqB,sBAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgCI;AAAO,YAAA,SAAS,EAAC,sBAAjB;AAAA,oCACI;AAAA,qCACA;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI;AAAA,wBACC/B,KAAK,IAAIK,UAAU,CAAC6C,GAAX,CAAeE,MAAM,iBAC3B;AAAI,2BAASA,MAAM,CAACtB,EAApB;AAAA,wCACI;AAAA,4BAAKsB,MAAM,CAACD;AAAZ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,yCAAI;AAAK,oBAAA,GAAG,EAAEC,MAAM,CAACC,SAAjB;AAA4B,oBAAA,SAAS,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,yCACI;AAAG,oBAAA,SAAS,EAAC,QAAb;AAAsB,oBAAA,KAAK,EAAC,QAA5B;AAAqC,oBAAA,OAAO,EAAE,MAAM7B,YAAY,CAAC4B,MAAM,CAACtB,EAAR,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADM;AADV;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA8DH,CArKD;;GAAM/B,K;UAC0BJ,Q,EAKXC,W;;;KANfG,K;AAsKN,eAAeA,KAAf","sourcesContent":["import useToken from '../useToken';\nimport { useNavigate } from 'react-router-dom';\nconst React = require('react');\n\nconst Admin = () => {\n    const { token, setToken } = useToken();\n    const [categories, setCategories] = React.useState([]);\n    const [showPhotos, setPhotoDetails] = React.useState([]);\n    const [message, setMessage] = React.useState(null);\n    const [formValues, setFormValues] = React.useState({});\n    const navigate = useNavigate();\n    // fetch and show all photos on admin page\n    const showAllRecords = async () => {\n        try {\n            const response = await fetch('http://localhost:9000/show-details', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }}).then(response => response.json())\n                .then((response) => { setPhotoDetails(response)}\n        );\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    // get categories ( We can add this function in util and make it reusabled as being used in carousel)\n    const getCategories = async () => {\n        try {\n            const response = await fetch(\"http://localhost:9000/categories\");\n            const jsonData = await response.json();\n            setCategories(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    //delete selected photo records\n    const deleteRecord = async (photID) => {\n        try {\n            const response = await fetch(`http://localhost:9000/categories/delete/${photID}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }}).then(response => response.json())\n                .then(response => updateTable(response, photID))\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    // update table row once record is deleted\n    const updateTable = (response, photID) => {\n        setMessage(response);\n        const newPhotos = showPhotos.filter((item) => item.id !== photID);\n        setPhotoDetails(newPhotos);\n    }\n\n    //set form data in react state\n    const handleChange = (e) => {\n        setFormValues({ ...formValues, [e.target.name]: e.target.value });\n    };\n\n    // add new record for selected category\n    const addNewRecord = async e => {\n        e.preventDefault();\n        try {\n            const response = await fetch('http://localhost:9000/categories/create-photos', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify(formValues)\n            }).then(response => response.json())\n                .then((response) => { addTableRecord(response)});\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    // show record instered msg and update table\n    const addTableRecord = (response) => {\n        setMessage('New Record Inserted, Please refresh page');\n        setPhotoDetails(showPhotos => [...showPhotos,response]);\n        //console.log(showPhotos);\n    }\n\n    // logout from admin panel\n    const logout = () => {\n        localStorage.setItem('token','');\n        navigate('/login');\n    }\n    React.useEffect(() => {\n        showAllRecords().then(r => null);\n        getCategories().then(r => null);\n        const removeMessage = setTimeout(() => {\n            // After 5 seconds set the show value to false\n            setMessage(false)\n        }, 10000)\n\n        return () => {\n            clearTimeout(removeMessage)\n        }\n    }, []);\n    return (\n        <>\n            <div className=\"container-lg\">\n                {message && (<div className=\"alert alert-info message\">{message}</div>)}\n                <div className=\"table-responsive\">\n                    <div className=\"table-wrapper\">\n                        <div className=\"table-title\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\"><h2>Category <b>Details</b></h2></div>\n                                <div className=\"col-md-8\">\n                                    <a href=\"#\" onClick={() => logout()}>Logout</a>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-sm-12\">\n                                    <form className=\"form-control\" onSubmit={addNewRecord}>\n                                        <div className=\"mb-3\">\n                                            <select className=\"form-select\" name=\"category_id\" onChange={handleChange}>\n                                                <option>Select Category</option>\n                                                    {categories && categories.map(category => (\n                                                            <option value={category.id}>{category.category}</option>\n                                                        )\n                                                    )}\n                                            </select>\n                                        </div>\n                                        <div className=\"mb-3\">\n                                            <input type=\"text\" className=\"form-control\" name=\"photo_url\" onChange={handleChange}/>\n                                        </div>\n                                        <div className=\"mb-3\">\n                                            <input type=\"submit\" className=\"btn btn-info add-new\"/>\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                            </div>\n                        </div>\n                        <table className=\"table table-bordered\">\n                            <thead>\n                            <tr>\n                                <th>Category</th>\n                                <th>Photo URL</th>\n                                <th>Actions</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {token && showPhotos.map(photos => (\n                                <tr data-id={photos.id}>\n                                    <td>{photos.category}</td>\n                                    <td><img src={photos.photo_url} className=\"table-images\" /></td>\n                                    <td>\n                                        <a className=\"delete\" title=\"Delete\" onClick={() => deleteRecord(photos.id)}>Delete</a>\n                                    </td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}