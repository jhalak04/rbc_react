{"ast":null,"code":"var _jsxFileName = \"/Users/jhalak.mehta/dev-git/TEST_INT/coding-test-adv-main/client/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Admin from './admin';\nimport useToken from '../useToken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:9000/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(response => response.json());\n}\n\nexport default function Login({\n  setToken\n}) {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-control\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          onChange: e => setUserName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jhalak.mehta/dev-git/TEST_INT/coding-test-adv-main/client/src/components/login.js"],"names":["React","useState","PropTypes","Admin","useToken","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","response","json","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","target","value","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AAClC,SAAOC,KAAK,CAAC,6BAAD,EAAgC;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAF+B;AAKxCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AALkC,GAAhC,CAAL,CAMJO,IANI,CAMCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANb,CAAP;AAOH;;AAED,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA6B;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,EAAxC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,EAAxC;;AAEA,QAAMqB,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAG,MAAMpB,SAAS,CAAC;AAC1Ba,MAAAA,QAD0B;AAE1BE,MAAAA;AAF0B,KAAD,CAA7B;AAIAH,IAAAA,QAAQ,CAACQ,KAAD,CAAR;AACH,GAPD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAEH,YAAzC;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,cAA7B;AAA4C,UAAA,QAAQ,EAAEC,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC,cAAjC;AAAgD,UAAA,QAAQ,EAAEJ,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA9BuBX,K;;KAAAA,K;AAgCxBA,KAAK,CAACY,SAAN,GAAkB;AACdX,EAAAA,QAAQ,EAAEf,SAAS,CAAC2B,IAAV,CAAeC;AADX,CAAlB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Admin from './admin';\nimport useToken from '../useToken';\n\nasync function loginUser(credentials) {\n    return fetch('http://localhost:9000/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n    }).then(response => response.json())\n}\n\nexport default function Login({ setToken }) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const token = await loginUser({\n            username,\n            password\n        });\n        setToken(token);\n    }\n    return(\n        <div className=\"login-wrapper\">\n            <h1>Please Log In</h1>\n            <form className=\"form-control\" onSubmit={handleSubmit}>\n                <label>\n                    <p>Username</p>\n                    <input type=\"text\" className=\"form-control\" onChange={e => setUserName(e.target.value)} />\n                </label>\n                <label>\n                    <p>Password</p>\n                    <input type=\"password\" className=\"form-control\" onChange={e => setPassword(e.target.value)} />\n                </label>\n                <div>\n                    <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}