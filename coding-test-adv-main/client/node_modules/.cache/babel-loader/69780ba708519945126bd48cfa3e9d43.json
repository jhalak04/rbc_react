{"ast":null,"code":"var _jsxFileName = \"/Users/jhalak.mehta/dev-git/TEST_INT/coding-test-adv-main/client/src/components/admin.js\",\n    _s = $RefreshSig$();\n\nimport useToken from '../useToken';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst React = require('react');\n\nconst Admin = () => {\n  _s();\n\n  const {\n    token,\n    setToken\n  } = useToken();\n  const [showPhotos, setPhotoDetails] = React.useState([]);\n  const [message, setMessage] = React.useState(null);\n  const navigate = useNavigate();\n\n  const showAllRecords = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/show-details', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(response => {\n        setPhotoDetails(response);\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const deleteRecord = async photID => {\n    try {\n      const response = await fetch(`http://localhost:9000/categories/delete/${photID}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(response => updateTable(response, photID));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const updateTable = (response, photID) => {\n    setMessage(response);\n    const newPhotos = showPhotos.filter(item => item.id !== photID);\n    setPhotoDetails(newPhotos);\n  };\n\n  const addNewRecord = async () => {\n    try {\n      const response = await fetch('http://localhost:9000/categories/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(response => {\n        setMessage(response);\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const logout = () => {\n    localStorage.setItem('token', '');\n    navigate('/login');\n  };\n\n  React.useEffect(() => {\n    showAllRecords().then(r => null);\n    console.log(showPhotos);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: () => logout(),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-title\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-8\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Category \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 72\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-info add-new\",\n                  onClick: () => addNewRecord(),\n                  children: \"Add New\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Photo URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: token && showPhotos.map(photos => /*#__PURE__*/_jsxDEV(\"tr\", {\n                \"data-id\": photos.id,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: photos.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: photos.photo_url,\n                    className: \"table-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"edit\",\n                    title: \"Edit\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"delete\",\n                    title: \"Delete\",\n                    onClick: () => deleteRecord(photos.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Admin, \"TGb4MwhBEZ7zIiOCaAU4v07rcTg=\", false, function () {\n  return [useToken, useNavigate];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/jhalak.mehta/dev-git/TEST_INT/coding-test-adv-main/client/src/components/admin.js"],"names":["useToken","useNavigate","React","require","Admin","token","setToken","showPhotos","setPhotoDetails","useState","message","setMessage","navigate","showAllRecords","response","fetch","method","headers","then","json","err","console","error","deleteRecord","photID","updateTable","newPhotos","filter","item","id","addNewRecord","logout","localStorage","setItem","useEffect","r","log","map","photos","category","photo_url"],"mappings":"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","sourcesContent":["import useToken from '../useToken';\nimport { useNavigate } from 'react-router-dom';\nconst React = require('react');\n\nconst Admin = () => {\n    const { token, setToken } = useToken();\n    const [showPhotos, setPhotoDetails] = React.useState([]);\n    const [message, setMessage] = React.useState(null);\n    const navigate = useNavigate();\n    const showAllRecords = async () => {\n        try {\n            const response = await fetch('http://localhost:9000/show-details', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }}).then(response => response.json())\n                .then((response) => { setPhotoDetails(response)}\n        );\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const deleteRecord = async (photID) => {\n        try {\n            const response = await fetch(`http://localhost:9000/categories/delete/${photID}`, {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }}).then(response => response.json())\n                .then(response => updateTable(response, photID))\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const updateTable = (response, photID) => {\n        setMessage(response);\n        const newPhotos = showPhotos.filter((item) => item.id !== photID);\n        setPhotoDetails(newPhotos);\n    }\n\n    const addNewRecord = async () => {\n        try {\n            const response = await fetch('http://localhost:9000/categories/create', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                }}).then(response => response.json())\n                .then((response) => { setMessage(response)});\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n    const logout = () => {\n        localStorage.setItem('token','');\n        navigate('/login');\n    }\n    React.useEffect(() => {\n        showAllRecords().then(r => null);\n        console.log(showPhotos);\n    }, []);\n    return (\n        <>\n            <div className=\"container-lg\">\n                <div className=\"message\">{message}</div>\n                <a href=\"#\" onClick={() => logout()}>Logout</a>\n                <div className=\"table-responsive\">\n                    <div className=\"table-wrapper\">\n                        <div className=\"table-title\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-8\"><h2>Category <b>Details</b></h2></div>\n                                <div className=\"col-sm-4\">\n                                    <button type=\"button\" className=\"btn btn-info add-new\" onClick={() => addNewRecord()}>Add New\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <table className=\"table table-bordered\">\n                            <thead>\n                            <tr>\n                                <th>Category</th>\n                                <th>Photo URL</th>\n                                <th>Actions</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {token && showPhotos.map(photos => (\n                                <tr data-id={photos.id}>\n                                    <td>{photos.category}</td>\n                                    <td><img src={photos.photo_url} className=\"table-images\" /></td>\n                                    <td>\n                                        <a className=\"edit\" title=\"Edit\" >Edit</a>\n                                        <a className=\"delete\" title=\"Delete\" onClick={() => deleteRecord(photos.id)}>Delete</a>\n                                    </td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}